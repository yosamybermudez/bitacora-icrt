{% extends '_themes/sneat/base.html.twig' %}

{% set title = 'Enviar mensaje: Telegram' %}

{% block title %}{{ title }}{% endblock %}

{% block content %}
    {{ form_start(form) }}
    <div class="card mb-4">
        <div class="card-body d-flex">
            <h4 class="fw-bold mb-0 align-self-center"><span class="text-muted fw-light">{{ title }} /</span> Contenido del mensaje</h4>
            <ul class="nav nav-pills flex-column flex-md-row-reverse ms-auto">
                <li class="nav-item">
                    <a class="nav-link bg-secondary text-white" href="{{ app.request.headers.get('referer') is null ? app.request.headers.get('referer') : path('app_mensaje') }}">Cancelar</a>
                </li>
            </ul>
        </div>
    </div>
    <div class="col-xxl">
        <div class="row">
            <div>
                <div class="card mb-4">
                    <div class="card-body">
                        {{ form_widget(form) }}

                        <div>
                            <label class="form-label">Seleccione de la lista</label>
                            <div>
                                {% for trabajador in trabajadores_telegram %}
                                    <span id="{{ trabajador.telegramId }}" class="telegram-badge badge bg-label-primary me-2 cursor-pointer">{{ trabajador.nombreCorto }}</span>
                                {% endfor %}
                            </div>
                        </div>
                        <div class="alert alert-info mt-4">
                            <i>Si no selecciona ningun destinatario, el mensaje se enviara al grupo de Telegram.</i>
                        </div>
                        <div class="card-action">
                            <button type="submit" class="btn btn-primary text-white float-end"><span class="bx bxl-telegram me-2"></span>Enviar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    {{ form_end(form) }}
{% endblock %}

{% block bottom_scripts %}
    <script>
        const input = $("input.taginput-nombres"),
            badge = $('span.telegram-badge');
            form = $('form');
            input.hide();
        input.wrap('<ul class="form-control p-0" id="taginput"></ul>');
        const ul = document.querySelector("ul#taginput");
        const label = $('.label-tagsinput');
        label.append('<span id="tags-count" class="ms-2"></span>');
        let tags = [];
        let ids = [];
        input.val('');
        createTag();
        function updateCount() {
            // $('#tags-count').html(tags.length + " / 10");
            // if(tags.length === 10){
            //     $('#tags-count').addClass('text-danger');
            //     input.hide();
            // } else {
            //     $('#tags-count').removeClass('text-danger');
            //     input.show();
            // }
        }
        function createTag(){
            ul.querySelectorAll("li").forEach(li => li.remove());
            tags.slice().reverse().forEach(tag =>{
                let liTag = `<li class="telegram-badge badge bg-primary p-2 me-2 mb-2">${tag}<i class="bx bxs-x-circle cursor-pointer ms-2" onclick="remove(this, '${tag}')"></i></li>`;
                ul.insertAdjacentHTML("afterbegin", liTag);
            });
        }
        function remove(element, tag){
            let index  = tags.indexOf(tag);
            tags = [...tags.slice(0, index), ...tags.slice(index + 1)];
            element.parentElement.remove();
            updateCount();
        }
        function addTag(e){
                console.log();
                let tag = e.target.textContent;
                let id = e.target.id;
                tag = tag.replace(',','');
                id = id.replace(',','');
                if(!tags.includes(tag)){
                    if(tags.length < 100){
                        tag.split(',').forEach(tag => {
                            if(tag !== ''){
                                tags.push(tag);
                                tags.sort();
                                createTag();
                            }
                        });
                        id.split(',').forEach(id => {
                            if(id !== ''){
                                ids.push(id);
                                ids.sort();
                                createTag();
                            }
                        });
                    }
                }
                console.log(tags);
                console.log(ids);
        }
        function mergeTags(){
            console.log(ids);
            form.append('<input type="hidden" name="ids_hidden" value="' + ids + '">');
        }
        badge.on("click", addTag);
        form.on("submit", mergeTags);
    </script>
{% endblock %}
